@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html
$app-primary: mat-palette($mat-purple);
$app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$app-theme: mat-light-theme($app-primary, $app-accent, $app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($app-theme);

// Define an alternate dark theme.
$dark-primary: mat-palette($mat-blue);
$dark-accent: mat-palette($mat-pink, A200, A100, A400);
$dark-warn: mat-palette($mat-red);
$dark-theme: mat-dark-theme($dark-primary, $dark-accent, $dark-warn);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.derekpedersen-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.derekpedersen-dark-theme {
    @include angular-material-theme($dark-theme);
}

// Material Overrides
.mat-progress-bar {
    margin: 0 auto !important;
    padding-top: 10% !important;
}

// Loading 
derekpedersen:empty + .loading {
    opacity: 1;
    z-index: 100;
}

derekpedersen:empty + .loading h1 {
    color: #2196f3;
    position: absolute;
    top: 50%;
    width: 100%;
    text-align: center;
    display: block;
    transform: translate(0, -50%);
}

.tile-skillset > figure {
    justify-content: flex-start !important;
    text-align: left;
    left: 0 !important;
}

// custom css
.fill-remaining-space {
    // This fills the remaining space, by using flexbox
    flex: 1 1 auto;
}